---
import type { MySkills } from "../types/TypeSkills";
import ProgressLevel from "./ProgressLevel.astro";
const { items, title, isSkills = false } = Astro.props;

const s_items = items.sort((a: MySkills, b: MySkills) => b.level - a.level);

// console.log(s_items);
---

<div class={`my-item container${isSkills ? " skills" : " tools"}`}>
    <h2 class="my-item__card-head">{title}</h2>
    {
        s_items.map((item: MySkills) => {
            // @ts-ignore
            // const Icon = svgs[card.id] ? svgs[card.id] : SVGCrossBrowser;
            return (
                <div class="my-item__card">
                    <div class="my-item__card-title">{item.name}</div>

                    <div class="my-item__card-descr">{item.description}</div>

                    {isSkills && (
                        // <div class="my-item__card-level">{`${item.level}%`}</div>
                        <ProgressLevel level={item.level} />
                    )}
                </div>
            );
        })
    }
</div>

<style lang="scss">
    @use "../styles/h2-title" as *;

    .my-item {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 1em;
        padding-bottom: clamp(3em, 10vw, 5em);

        &__card-head {
            grid-column: 1 / -1;
            @include title-h2;
        }

        &__card {
            background-color: var(--color-black);
            padding: 2em 1.2em;
            border-radius: 0.5em;

            display: flex;
            flex-direction: column;
            align-items: start;

            &-title {
                font-size: 1em;
                white-space: nowrap;
                color: var(--color-basic-white);
                font-weight: 700;
            }

            &-level {
                font-size: 0.9em;
                color: var(--color-basic-white);
                font-weight: 600;
            }

            &-descr {
                font-size: 0.6em;
                // text-wrap: balance;
                color: var(--color-basic-white);
                flex-basis: 100%;
            }
        }
    }

    @media (max-width: 533px) {
        .my-item {
            grid-template-columns: 1fr;
            gap: 0.4em;

            &__card {
                padding: 1em;
                font-size: clamp(0.6em, 4vw, 1em);
                align-items: center;
                gap: 0.3em;

                &-title,
                &-level,
                &-descr {
                    text-align: center;
                }
            }
        }
    }
</style>
