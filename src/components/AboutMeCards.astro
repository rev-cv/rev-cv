---
import type { AboutMe } from "../types/TypePortfolio";
const { cards } = Astro.props;

import SVGCrossBrowser from "../assets/aboutme/cross-browser.svg";
import SVGCode from "../assets/aboutme/code.svg";
import SVGMultiApp from "../assets/aboutme/app.svg";
import SVGAutomation from "../assets/aboutme/automation.svg";
import SVGDownload from "../assets/aboutme/cloud-download.svg";
import SVGTelegram from "../assets/aboutme/telegram.svg";
import SVGCluster from "../assets/aboutme/cluster.svg";
import SVGMedal from "../assets/aboutme/medal.svg";
import SVGSpeed from "../assets/aboutme/speed-meter.svg";
import SVGCollege from "../assets/aboutme/college.svg";
import SVGCrossPlatform from "../assets/aboutme/cross-platform.svg";
import SVGUI from "../assets/aboutme/interface-ui.svg";
import SVGWebStack from "../assets/aboutme/html-css-js.svg";
import SVGFrameworks from "../assets/aboutme/frameworks.svg";
import SVGDevice from "../assets/aboutme/devices.svg";
import SVGAttention from "../assets/aboutme/attention.svg";
import SVGGroup from "../assets/aboutme/group.svg";
import SVGExperimentation from "../assets/aboutme/experimentation.svg";
import SVGClient from "../assets/aboutme/client.svg";
import SVGAchievement from "../assets/aboutme/achievement.svg";
import SVGButterfly from "../assets/aboutme/butterfly.svg";
import SVGRule from "../assets/aboutme/rule.svg";
import SVGMarkDown from "../assets/aboutme/md.svg";
import SVGAPI from "../assets/aboutme/api.svg";
import SVGRocket from "../assets/aboutme/rocket.svg";
import SVGDjangoPlusFastAPI from "../assets/aboutme/django_fastapi.svg";
import SVGSecurity from "../assets/aboutme/security.svg";
import SVGParallel from "../assets/aboutme/parallel.svg";
import SVGServer from "../assets/aboutme/server.svg";
import SVGDB from "../assets/aboutme/database.svg";
import SVGMultiplication from "../assets/aboutme/multiplication.svg";

const svgs = {
    "cross-browser": SVGCrossBrowser,
    "clean-code": SVGCode,
    "multifunctional-apps": SVGMultiApp,
    automation: SVGAutomation,
    "data-parsing": SVGDownload,
    "telegram-bots": SVGTelegram,
    "api-integration": SVGCluster,
    testing: SVGMedal,
    performance: SVGSpeed,
    "continuous-learning": SVGCollege,
    "cross-platform": SVGCrossPlatform,
    "modern-ui": SVGUI,
    "html-css-js": SVGWebStack,
    frameworks: SVGFrameworks,
    "responsive-design": SVGDevice,
    "ui-ux-detail": SVGAttention,
    "team-collaboration": SVGGroup,
    "testing-quality": SVGCode,
    experimentation: SVGExperimentation,
    "fast-learning": SVGCollege,
    "client-focus": SVGClient,
    "results-driven": SVGAchievement,
    "creative-approach": SVGButterfly,
    prototyping: SVGRule,
    documentation: SVGMarkDown,
    "api-development": SVGAPI,
    devops: SVGRocket,
    "django-fastapi": SVGDjangoPlusFastAPI,
    security: SVGSecurity,
    "async-programming": SVGParallel,
    "backend-systems": SVGServer,
    "database-design": SVGDB,
    scalability: SVGMultiplication,
};
---

<div class="about-me container">
    <div class="about-me__card-head">Обо мне</div>
    {
        cards.map((card: AboutMe) => {
            // @ts-ignore
            const Icon = svgs[card.id] ? svgs[card.id] : SVGCrossBrowser;
            return (
                <div class="about-me__card">
                    <Icon />
                    <div class="about-me__card-title">{card.title}</div>
                    <div class="about-me__card-descr">{card.descr}</div>
                </div>
            );
        })
    }
</div>

<style lang="scss">
    .about-me {
        display: flex;
        justify-content: start;
        flex-wrap: wrap;
        gap: 20px;
        padding-top: clamp(3em, 10vw, 5em);
        padding-bottom: clamp(3em, 10vw, 5em);

        &__card-head {
            flex: 1 1 100%;
            font-size: 1.8em;
            padding-bottom: 1em;
            color: var(--color-basic-white);
            font-weight: 700;

            display: flex;
            // justify-content: center;
            // align-items: center;
            gap: 0.5em;
        }

        &__card {
            flex: 1 1 200px;
            max-width: 40%;
            background-color: var(--color-black);
            padding: 2em 1.2em;
            border-radius: 0.5em;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;

            display: flex;
            flex-direction: column;

            align-items: center;

            gap: 0.8em;

            position: relative;

            color: var(--color-basic-white-80);

            &-title {
                font-size: 1em;
                white-space: nowrap;
                color: var(--color-basic-white);
                font-weight: 700;
            }

            &-descr {
                font-size: 0.6em;
                text-wrap: balance;
                color: var(--color-basic-white);
            }

            // picture {
            //     position: absolute;
            //     inset: 0;
            //     z-index: -1;
            //     overflow: hidden;
            //     border-radius: 0.5em;
            //     opacity: 0.5;
            //     user-select: none;

            //     img {
            //         width: 100%;
            //         height: 100%;
            //         object-fit: cover;
            //         filter: blur(2px);
            //     }
            // }

            svg {
                width: auto;
                height: 2em;
            }
        }
    }

    @media (max-width: 1120px) {
        .about-me {
            &__card {
                &-title {
                    font-size: clamp(0.75em, 2.5vw, 1em);
                    white-space: wrap;
                }
            }
        }
    }

    @media (max-width: 725px) {
        .about-me {
            &__card {
                flex: 1 1 calc(50% - 0.5em);
                max-width: 100%;
            }
        }
    }

    @media (max-width: 533px) {
        .about-me {
            &__card {
                flex: 1 1 100%;
                max-width: 100%;
            }
        }
    }
</style>
